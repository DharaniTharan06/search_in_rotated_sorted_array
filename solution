class Solution {
public:
    int search(vector<int>& nums, int target) {
        int low = 0,high = nums.size()-1;
        int mid,pivot;
        while(low<high){
            mid = low + (high-low)/2;
            if(nums[mid]>=nums[0]){
                low = mid+1;
            }else{
                high = mid;
            }
        }pivot = low;
        cout<<pivot;
        if(nums[pivot]==target){
            return pivot;
        }
        if(target>=nums[pivot] && target<=nums[nums.size()-1]){
            low = pivot;
            high = nums.size()-1;
        }else{
            low = 0;
            high = pivot;
        }while(low<=high){
            mid = low + (high-low)/2;
            if(nums[mid]==target){
                return mid;
            }else if(nums[mid]<target){
                low = mid+1;
            }else{
                high = mid-1;
            }
        }return -1;
    }
};
